extends ../layouts/admin
block content
  //- breadcrumb
  .breadcrumb
    span
      a(href='/') Client Page
    span.ml-2.mr-2  / 
    span Admin
    span.ml-2.mr-2  / 
    span User
  //- end breadcrumb
  .container.col-11.mt-5.pt-4.pb-4(style='background:white')
    //- check deleted
    if idIsDeleted
      .alert.alert-danger.text-center.m-auto
        = 'User '
        = ' ( id: ' + idIsDeleted + ' ) Has been Deleted'
    //- check edited
    if idIsEdited
      - const userIsEdited = users.find(p=>p.id == idIsEdited)
        .alert.alert-success.text-center.m-auto
          = 'User : '+userIsEdited.user_name
          = ' ( id: ' + userIsEdited.id + ' ) has been Edited'
    //- check added
    if added
      .alert.alert-success.text-center.m-auto Add new User Successfull!
    //- check error
    if error
      .alert.alert-danger.text-center.m-auto= error
    //- //- Add new user
    //- h4.text-secondary Add new User
    //- form(action="/admin/user/add", method='POST')#addNewUser.col-8
    //-   //- user_name
    //-   label(for="add-user_name") User Name
    //-   input#add-user_name(
    //-     type="text", 
    //-     placeholder="User Name", 
    //-     name='user_name',
    //-     required,
    //-     autocomplete="off").form-control
    //-   //- user quantity
    //-   label(for="add-user_phone") Phone
    //-   input#add-user_phone(
    //-     type="text",
    //-     placeholder="Phone", 
    //-     name='user_phone',
    //-     required,
    //-     pattern="[0-9]{10,}").form-control
    //-   //- user_price
    //-   label(for="add-user_email") User Email
    //-   input#add-user_email(
    //-     type="email",
    //-     placeholder="User Email", 
    //-     name='user_email',
    //-     required,
    //-     autocomplete="off").form-control
    //-   //- user_password
    //-   label(for="add-user_password") User Password
    //-   input#add-user_password(
    //-     type="password",
    //-     placeholder="User Password", 
    //-     name='user_password',
    //-     required,
    //-     pattern=".{6,}").form-control
    //-   //- select permission
    //-   label(for="add-user_permission").mt-2 Permission
    //-   select.custom-select#add-user_permission(name="user_permission")
    //-     option(value="client") Client
    //-     option(value="admin") Admin
    //-   button.btn.btn-success.mb-3.mt-3(form='addNewUser', type='submit') Add User
    //- //- END Add User
    //- search 
    h4.text-secondary.text-center.font-weight-bold All Users
    hr.mb-4
    .row(style='margin-bottom: 5px;')
      //- search
      .col
        input#valueToRenderSearch.d-inline.form-control.col-6(type='text', placeholder='Search by user Name', style='margin-right: 95px;')
      //- Remove many
      .col.text-right
        form(action="/admin/user/deleteManyUser", method='post')#deleteMany
          input(type="hidden", name='idToDeletes')#idToDeletes
          button.btn.btn-danger(type='submit', form='deleteMany') Remove selected
    //- table user
    table#table-sp.text-center
      thead
        tr
          th.p-3
          th Name
          th Phone
          th Email
          th Permission
          th Action
          th 
            .btn.btn-sm.btn-primary#checkAll
              i.fas.fa-check
      tbody
      - const startLoad = (parseInt(page) - 1 )*10
      - const endLoad = parseInt(page)*10
      - for(let i = startLoad; i < users.length && i < endLoad; i++)
        tr.items
          td= i + 1
          td.item-names= users[i].user_name
          td= users[i].user_phone
          td= users[i].user_email
          td= users[i].user_permission
          td
            //- Delete User
            form(action='#', method='POST')
              input(type="hidden", value=users[i].id, name='id')
              if users[i].user_permission == 'admin'
                button.mt-2.xoa_sp.cantDelete(disabled,type='submit', formaction='/admin/user/delete') Delete
              else
                button.mt-2.xoa_sp(type='submit', formaction='/admin/user/delete') Delete

            //- Button trigger modal
            button.xoa_sp(
              type='button', 
              data-toggle='modal', 
              data-target='#form' + users[i].id) Edit
            // Modal
            form(
              action="/admin/user/edit", 
              method="post",
              tabindex='-1', 
              role='dialog',
              aria-hidden='true',
              id='form' + users[i].id).modal.fade
                .modal-dialog(role='document')
                  .modal-content
                    .modal-header
                      h5.modal-title Edit User
                      button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') Ã—
                    .modal-body
                      input(type="hidden",value=users[i].id, name='id').form-control
                      //- user_name
                      label(for="edit-user_name") User Name
                      input(
                        type="text", 
                        placeholder="User Name", 
                        name='user_name',
                        value=users[i].user_name,
                        required).form-control
                      //- user phone
                      label(for="edit-user_phone") Phone
                      input(
                        type="text",
                        placeholder="Phone", 
                        name='user_phone',
                        value=users[i].user_phone,
                        pattern='[0-9]{10,}',
                        required).form-control
                      //- user_email
                      label(for="edit-user_email") User Email
                      input(
                        type="email",
                        placeholder="User Email", 
                        name='user_email',
                        value=users[i].user_email,
                        required).form-control
                      //- user_password
                      if users[i].user_permission != 'admin'
                        label(for="edit-user_password") User Password
                        input(
                          type="text",
                          placeholder="User Password", 
                          name='user_password',
                          value=users[i].user_password,
                          required,
                          pattern='.{6,}').form-control
                      else
                        label(for="edit-user_password") Admin Password - Required to modify
                        input(
                          type="text",
                          placeholder="Admin Password", 
                          name='admin_password',
                          value='',
                          required).form-control
                      //- choose permission
                      label(for="edit-user_permission").mt-2 Permission
                      select.custom-select(name="user_permission")
                        if 'admin' == users[i].user_permission
                          option(value='admin', selected) admin
                          option(value='client') client
                        else
                          option(value='admin') admin
                          option(value='client', selected) client
                    .modal-footer
                      button.btn.btn-secondary(type='button', data-dismiss='modal') Close
                      if 'admin' == users[i].user_permission
                        button.btn.btn-primary(
                          type='submit', 
                          form='form'+users[i].id) Save changes
                      else
                        button.btn.btn-primary(
                          type='submit', 
                          form='form'+users[i].id) Save changes
          td 
            if users[i].user_permission == 'admin'
              input.checkbox(type="checkbox")
            else
              input.checkbox(type="checkbox", value=users[i].id)
    //- list page
    .container.text-center
      - const pages = Math.ceil(users.length/10)
      - for(let i = 1; i <= pages; i++)
        if page == i
          a.btn.btn-outline-primary.m-2.active(href='/admin/user?page='+i)= i
        else
          a.btn.btn-outline-primary.m-2(href='/admin/user?page='+i)= i