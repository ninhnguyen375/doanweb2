doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0, shrink-to-fit=no')
    title Sign Up
    link(rel='shortcut icon', href='/public/img/icon.jpg')
    link(rel='stylesheet', href='/public/signup/bootstrap/css/bootstrap.min.css')
    link(rel='stylesheet', href='/public/signup/fonts/fontawesome-all.min.css')
    link(rel='stylesheet', href='/public/signup/fonts/ionicons.min.css')
    link(rel='stylesheet', href='/public/signup/css/Footer-Dark.css')
    link(rel='stylesheet', href='/public/signup/css/Login-Form-Dark.css')
    link(rel='stylesheet', href='/public/signup/css/styles.css')
  body
    .login-dark(style='height: 100vh;color: rgb(255,255,255);')
      .row
        .col.float-left
          section.float-left
            a(href='/home', style='font-size: 32px;padding: 9px;color: rgb(225,225,225);text-decoration: none;') ShopPi
      form(
        method='post',
        action='/user/signup', 
        style='max-width: 494px;padding: 40px;padding-top: 14px;padding-bottom: 16px;',
        onsubmit='return canSubmit()')
        .illustration(style='height: 171px;padding-top: 0px;padding-bottom: 0px;')
          i.far.fa-user-circle(style='font-size: 125px;color: rgb(168,206,255);')
        .text-danger.alertDanger#alert
        if error
          .text-danger.alertDanger= error
        //-   Name
        .form-group
          input.form-control(type='text', placeholder='Name', name='user_name', required)
        //-   Phone
        .form-group
          input.form-control(
            type='text', 
            placeholder='Phone', 
            name='user_phone', 
            required,
            pattern='[0-9]{10,}')
        //-   Email
        .form-group
          input#emailInput.form-control(
            pattern="^[a-z][a-z0-9_.]{5,32}@[a-z0-9]{2,}(\.[a-z0-9]{2,4}){1,2}$"
            type='email', placeholder='Email', name='user_email', required)
        //-   Password
        .form-group
          input.form-control(
            type='password', 
            name='user_password', 
            required, 
            pattern='.{6,}',
            placeholder='Password')#userpassword
        //-   Confirm Password
        .form-group
          input.form-control(
            type='password', 
            name='confirmPassword', 
            required, 
            pattern='.{6,}',
            placeholder='Confirm Password')#userpassword2
        //- User permission
        .form-group
          button.btn.btn-primary.btn-block(type='submit') Sign Up
        a.forgot(href='/user/login') Have account. Login?
      section
    .footer-dark
      footer
        .container
          .row
            .col-sm-6.col-md-3.item
              h3 Services
              ul
                li
                  a(href='#') Web design
                li
                  a(href='#') Development
                li
                  a(href='#') Hosting
            .col-sm-6.col-md-3.item
              h3 About
              ul
                li
                  a(href='#') Company
                li
                  a(href='#') Team
                li
                  a(href='#') Careers
            .col-md-6.item.text
              h3 Company Name
              p
                | Praesent sed lobortis mi. Suspendisse vel placerat ligula. Vivamus ac sem lacus. Ut vehicula rhoncus elementum. Etiam quis tristique lectus. Aliquam in arcu eget velit pulvinar dictum vel in justo.
            .col.item.social
              a(href='#')
                i.icon.ion-social-facebook
              a(href='#')
                i.icon.ion-social-twitter
              a(href='#')
                i.icon.ion-social-snapchat
              a(href='#')
                i.icon.ion-social-instagram
          p.copyright Company Name Â© 2017
    script(src='/public/signup/js/jquery.min.js')
    script(src='/public/signup/bootstrap/js/bootstrap.min.js')
    script(src="/public/js/scripts.js")
    script(src="/public/js/axios.min.js")
    script.
      const noti = document.getElementById('alert');
      const inputEmail = document.getElementById('emailInput');
      let cansub = false;
      function check(data){
        const found = data.find((re) => {
          return re.user_email === inputEmail.value;
        });
        if (found) {
          noti.innerHTML = 'This email has been used!';
          cansub = false;
        } else {
          noti.innerHTML = '';
          cansub = true;
        }
      }
      axios.get('/api/users/email')
        .then(function(res){
          inputEmail.addEventListener('keyup', function(){
            check(res.data);
          });
          inputEmail.addEventListener('focusout', function () {
            check(res.data);
          });
          inputEmail.addEventListener('click', function () {
            check(res.data);
          });
          inputEmail.addEventListener('change', function () {
            check(res.data);
          });
        })
        .catch(function(err){
          console.log(err);
        });
      function canSubmit () {
        const pass1 = document.getElementById('userpassword');
        const pass2 = document.getElementById('userpassword2');
        if(cansub && (pass1.value() === pass2.value())){
          return true;
        }
        return false;
      }







































